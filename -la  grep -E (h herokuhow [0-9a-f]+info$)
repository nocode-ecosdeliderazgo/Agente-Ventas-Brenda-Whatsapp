[1mdiff --git a/docs/PROJECT_OVERVIEW.md b/docs/PROJECT_OVERVIEW.md[m
[1mnew file mode 100644[m
[1mindex 0000000..54c5914[m
[1m--- /dev/null[m
[1m+++ b/docs/PROJECT_OVERVIEW.md[m
[36m@@ -0,0 +1,352 @@[m
[32m+[m[32m# PROJECT OVERVIEW - Bot Brenda WhatsApp[m
[32m+[m[32m> **Documentación Técnica de Alto Nivel**[m[41m  [m
[32m+[m[32m> **Última actualización**: Enero 2025[m
[32m+[m
[32m+[m[32m## 🏗️ Resumen Arquitectónico[m
[32m+[m
[32m+[m[32m### Tecnologías y Librerías Clave[m
[32m+[m[32m- **Framework Web**: FastAPI + Uvicorn/Gunicorn[m
[32m+[m[32m- **IA Conversacional**: OpenAI GPT (client v1.30+)[m
[32m+[m[32m- **Mensajería**: Twilio WhatsApp API[m
[32m+[m[32m- **Base de Datos**: PostgreSQL (asyncpg)[m
[32m+[m[32m- **Configuración**: Pydantic Settings + python-dotenv[m
[32m+[m[32m- **Validación**: Pydantic v2.0+[m
[32m+[m[32m- **Cliente HTTP**: httpx (asíncrono)[m
[32m+[m
[32m+[m[32m### Estructura de Directorios y Responsabilidades[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32mapp/[m
[32m+[m[32m├── config/             # ⚙️ Configuración centralizada (settings.py)[m
[32m+[m[32m├── domain/             # 🏛️ Entidades de negocio (User, Message, Course, etc.)[m
[32m+[m[32m├── application/        # 📋 Casos de uso de negocio[m
[32m+[m[32m│   └── usecases/       # ▶️ Flujos principales del bot[m
[32m+[m[32m├── infrastructure/     # 🔧 Adaptadores externos[m[41m [m
[32m+[m[32m│   ├── twilio/         # 📱 Cliente WhatsApp[m
[32m+[m[32m│   ├── openai/         # 🤖 Cliente IA[m
[32m+[m[32m│   ├── database/       # 🗄️ PostgreSQL + repositorios[m
[32m+[m[32m│   └── tools/          # 🛠️ Sistema de herramientas[m
[32m+[m[32m├── presentation/       # 🌐 Interfaces externas[m
[32m+[m[32m│   └── api/            # REST API (webhook.py)[m
[32m+[m[32m└── templates/          # 📝 Templates de respuestas[m
[32m+[m
[32m+[m[32mmemory/                 # 💾 Sistema de memoria persistente[m
[32m+[m[32mconfig/                 # 🔧 Configuración legacy (twilio_settings.py)[m
[32m+[m[32mresources/              # 📄 Archivos estáticos (PDFs, imágenes)[m
[32m+[m[32mprompts/                # 🧠 Templates de prompts IA[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Punto de Entrada Principal[m
[32m+[m[32m- **Webhook FastAPI**: `app/presentation/api/webhook.py`[m
[32m+[m[32m- **Puerto**: 8000 (configurable)[m
[32m+[m[32m- **Endpoints**:[m
[32m+[m[32m  - `POST /webhook` - Recibe mensajes de Twilio[m
[32m+[m[32m  - `GET /` - Health check[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 🚀 Flujos de Negocio Productivos[m
[32m+[m
[32m+[m[32m### ▶️ Flujo de Bienvenida[m
[32m+[m[32m**Archivo**: `app/application/usecases/welcome_flow_use_case.py`[m
[32m+[m
[32m+[m[32m**Responsabilidades**:[m
[32m+[m[32m- Ofrecer catálogo de cursos disponibles[m
[32m+[m[32m- Asegurar selección obligatoria de un curso[m[41m  [m
[32m+[m[32m- Guardar curso seleccionado en memoria[m
[32m+[m[32m- Transicionar a agente inteligente personalizado[m
[32m+[m
[32m+[m[32m**Estados**:[m
[32m+[m[32m- `privacy_flow_completed` → ofrece cursos[m
[32m+[m[32m- `waiting_for_response: "course_selection"` → procesa selección[m
[32m+[m[32m- `selected_course` definido → activa agente inteligente[m
[32m+[m
[32m+[m[32m### 🔐 Flujo de Privacidad[m[41m  [m
[32m+[m[32m**Archivo**: `app/application/usecases/privacy_flow_use_case.py`[m
[32m+[m
[32m+[m[32m**Etapas**:[m
[32m+[m[32m1. **Solicitud inicial**: Pide consentimiento de privacidad[m
[32m+[m[32m2. **Validación nombre**: Extrae/solicita nombre del usuario[m
[32m+[m[32m3. **Solicitud rol**: Pide rol profesional (opcional)[m
[32m+[m[32m4. **Completado**: `stage = "privacy_flow_completed"`[m
[32m+[m
[32m+[m[32m**Flags clave**:[m
[32m+[m[32m- `privacy_accepted: bool`[m
[32m+[m[32m- `privacy_requested: bool`[m[41m [m
[32m+[m[32m- `waiting_for_response: "privacy_acceptance" | "user_name" | "user_role"`[m
[32m+[m
[32m+[m[32m### ✅ Flujo de Confirmación Rápida (`PAYMENT_CONFIRMATION`)[m
[32m+[m[32m**Archivo**: `app/application/usecases/generate_intelligent_response.py:2289`[m
[32m+[m
[32m+[m[32m**Responsabilidades**:[m
[32m+[m[32m- Detecta intención `PAYMENT_CONFIRMATION`[m[41m [m
[32m+[m[32m- Envía datos bancarios + bonos activos[m
[32m+[m[32m- Conecta con asesor especializado[m
[32m+[m[32m- Formatea respuesta con `WhatsAppBusinessTemplates.payment_confirmation_advisor_contact()`[m
[32m+[m
[32m+[m[32m**Intenciones relacionadas**:[m
[32m+[m[32m- `PAYMENT_COMPLETED` - Pago ya realizado[m
[32m+[m[32m- `COMPROBANTE_UPLOAD` - Comprobante enviado[m
[32m+[m
[32m+[m[32m### 💳 Flujo de Oferta de Datos Bancarios + Bono[m
[32m+[m[32m**Archivo**: `app/application/usecases/purchase_bonus_use_case.py`[m
[32m+[m
[32m+[m[32m**Funcionalidad**:[m
[32m+[m[32m- Activa con `purchase_bonus_sent: bool = False`[m
[32m+[m[32m- Obtiene bonos activos desde BD (`bond` table)[m
[32m+[m[32m- Envía datos bancarios para transferencia[m
[32m+[m[32m- Marca `purchase_bonus_sent: bool = True`[m
[32m+[m
[32m+[m[32m### 📚 Flujo de Consulta de Curso / PDF[m
[32m+[m[32m**Archivos**:[m[41m [m
[32m+[m[32m- `app/application/usecases/query_course_information.py`[m
[32m+[m[32m- `app/application/usecases/course_announcement_use_case.py`[m
[32m+[m
[32m+[m[32m**Funcionalidades**:[m
[32m+[m[32m- Consulta PostgreSQL (tabla `ai_courses`)[m
[32m+[m[32m- Envía PDFs desde `/resources/course_materials/`[m
[32m+[m[32m- Templates personalizados por curso[m
[32m+[m[32m- Integración con sistema de herramientas[m
[32m+[m
[32m+[m[32m### 🛠️ Sistema de Herramientas[m
[32m+[m[32m**Archivos**:[m
[32m+[m[32m- `app/infrastructure/tools/tool_system.py` - Framework base[m
[32m+[m[32m- `app/infrastructure/tools/tool_db.py` - Consultas DB[m
[32m+[m[32m- `app/application/usecases/tool_activation_use_case.py` - Activación inteligente[m
[32m+[m
[32m+[m[32m**Herramientas Disponibles**:[m
[32m+[m[32m- `EnviarRecursosGratuitos` - Recursos educativos[m
[32m+[m[32m- `MostrarSyllabusInteractivo` - Programa detallado[m
[32m+[m[32m- `EnviarPreviewCurso` - Vista previa[m
[32m+[m[32m- `MostrarComparativaPrecios` - Comparación de precios[m
[32m+[m[32m- `MostrarBonosExclusivos` - Bonos especiales[m
[32m+[m[32m- `ContactarAsesorDirecto` - Escalación humana[m
[32m+[m
[32m+[m[32m**Activación por Intención**:[m
[32m+[m[32m- `EXPLORATION` → Recursos + Syllabus[m
[32m+[m[32m- `OBJECTION_PRICE` → Comparativa precios + Bonos[m
[32m+[m[32m- `BUYING_SIGNALS` → Contacto asesor[m
[32m+[m[32m- Máximo 2 herramientas por interacción[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 🗄️ Modelo de Datos[m
[32m+[m
[32m+[m[32m### Tablas PostgreSQL Relevantes[m
[32m+[m
[32m+[m[32m#### `ai_courses` - Catálogo Maestro[m
[32m+[m[32m```sql[m
[32m+[m[32mid_course (uuid, PK)[m
[32m+[m[32mname, short_description, long_description[m
[32m+[m[32mprice, currency[m
[32m+[m[32msession_count, total_duration_min[m[41m  [m
[32m+[m[32mlevel (básico/intermedio/avanzado)[m
[32m+[m[32mmodality (online/presencial/híbrido)[m
[32m+[m[32mstatus, start_date, end_date[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m#### `bond` - Bonos y Recursos Extra[m
[32m+[m[32m```sql[m
[32m+[m[32mid_bond (bigint, PK)[m
[32m+[m[32mcontent, type_bond[m
[32m+[m[32mid_courses_fk → ai_courses[m[41m  [m
[32m+[m[32mbond_url, active[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m#### `ai_course_session` - Sesiones del Curso[m
[32m+[m[32m```sql[m
[32m+[m[32mid_session (uuid, PK)[m
[32m+[m[32msession_index, title, objective[m
[32m+[m[32mduration_minutes, scheduled_at[m
[32m+[m[32mid_course_fk → ai_courses[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m#### `elements_url` - Recursos Multimedia[m
[32m+[m[32m```sql[m
[32m+[m[32mid_element (uuid, PK)[m[41m  [m
[32m+[m[32mitem_type, url_test, description_url[m
[32m+[m[32mid_session_fk, id_activity_fk[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Relaciones Principales[m
[32m+[m[32m```[m
[32m+[m[32mai_courses 1 ────< ai_course_session 1 ────< ai_tema_activity[m
[32m+[m[32m   |                                 \[m
[32m+[m[32m   |                                  > elements_url[m
[32m+[m[32m   |[m
[32m+[m[32m   └─── 1 ────< bond (bonos por curso)[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 💾 Persistencia de Memoria del Lead[m
[32m+[m
[32m+[m[32m### Archivo Principal[m
[32m+[m[32m`memory/lead_memory.py` - Clase `LeadMemory`[m
[32m+[m
[32m+[m[32m### Campos Principales[m
[32m+[m
[32m+[m[32m#### Estados del Flujo[m
[32m+[m[32m```python[m
[32m+[m[32mstage: str = "first_contact"  # first_contact, privacy_flow, course_selection, sales_agent, converted[m
[32m+[m[32mcurrent_flow: str = "none"    # none, privacy, course_selection, sales_conversation[m[41m  [m
[32m+[m[32mflow_step: int = 0            # paso actual dentro del flujo[m
[32m+[m[32mwaiting_for_response: str     # name, privacy_acceptance, course_choice, etc.[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m#### Información del Usuario[m
[32m+[m[32m```python[m
[32m+[m[32muser_id: str[m
[32m+[m[32mname: str = ""[m
[32m+[m[32mrole: Optional[str] = None[m
[32m+[m[32mselected_course: str = ""[m
[32m+[m[32mprivacy_accepted: bool = False[m
[32m+[m[32mprivacy_requested: bool = False[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m#### Personalización Avanzada (Fase 2)[m
[32m+[m[32m```python[m
[32m+[m[32mbuyer_persona_match: str      # lucia_copypro, marcos_multitask, sofia_visionaria, etc.[m
[32m+[m[32mprofessional_level: str      # junior, mid-level, senior, executive[m
[32m+[m[32mcompany_size: str            # startup, small, medium, large, enterprise[m[41m  [m
[32m+[m[32mindustry_sector: str         # marketing, operations, tech, consulting, etc.[m
[32m+[m[32mtechnical_level: str         # beginner, intermediate, advanced[m
[32m+[m[32mdecision_making_power: str   # influencer, decision_maker, budget_holder[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m#### Scoring y Señales[m
[32m+[m[32m```python[m
[32m+[m[32mlead_score: int = 50[m
[32m+[m[32minteraction_count: int = 0[m
[32m+[m[32minterest_level: str = "unknown"[m
[32m+[m[32mpain_points: List[str] = [][m
[32m+[m[32mbuying_signals: List[str] = [][m
[32m+[m[32murgency_signals: List[str] = [][m
[32m+[m[32mbudget_indicators: List[str] = [][m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m#### Flags de Control[m
[32m+[m[32m```python[m
[32m+[m[32mbrenda_introduced: bool = False           # Si ya se presentó Brenda[m
[32m+[m[32mpurchase_bonus_sent: bool = False         # Si ya se enviaron datos bancarios[m
[32m+[m[32moriginal_message_body: Optional[str]      # Mensaje que inició el flujo[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Métodos Útiles[m
[32m+[m[32m- `is_first_interaction()` - Primera vez del usuario[m
[32m+[m[32m- `needs_privacy_flow()` - Necesita flujo de privacidad[m[41m  [m
[32m+[m[32m- `is_ready_for_sales_agent()` - Listo para agente inteligente[m
[32m+[m[32m- `is_high_value_lead()` - Lead de alto valor[m
[32m+[m[32m- `get_recommended_approach()` - Estrategia de comunicación[m
[32m+[m
[32m+[m[32m### Almacenamiento[m
[32m+[m[32m- **Directorio**: `memorias/` (configurable)[m
[32m+[m[32m- **Formato**: JSON (`memory_{user_id}.json`)[m
[32m+[m[32m- **Backup**: Automático antes de guardar[m
[32m+[m[32m- **Cache**: En memoria durante ejecución[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## ⚠️ Puntos Críticos / TODOs[m
[32m+[m
[32m+[m[32m### TODOs Prioritarios[m
[32m+[m
[32m+[m[32m#### `app/application/usecases/generate_intelligent_response.py`[m
[32m+[m[32m```python[m
[32m+[m[32m# Línea 328: Mejorar análisis de intención incluyendo info de curso[m
[32m+[m[32m# Línea 1323: Implementar envío de recursos[m[41m  [m
[32m+[m[32m# Línea 1328: Implementar flujo de contacto con asesor[m
[32m+[m[32m# Línea 1333: Implementar envío de overview del curso[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m#### `app/infrastructure/tools/tool_system.py`[m
[32m+[m[32m```python[m
[32m+[m[32m# Línea 122: Mensaje personalizado de recursos (implementar después)[m
[32m+[m[32m# Línea 161: Generar mensaje formateado syllabus (implementar después)[m[41m  [m
[32m+[m[32m# Línea 257: Generar mensaje personalizado con ROI (implementar después)[m
[32m+[m[32m# Línea 293: Generar mensaje con bonos reales (implementar después)[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m#### `prompts/tool_prompts.py`[m
[32m+[m[32m```python[m
[32m+[m[32m# Línea 5: Agregar más plantillas para bonos, demos, cierre, etc.[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Componentes Legacy/Obsoletos[m
[32m+[m
[32m+[m[32m#### Evitar Consultar[m
[32m+[m[32m- `tests/` - Tests desactualizados, usar solo como referencia[m
[32m+[m[32m- `core/whatsapp_agent.py` - Agente legacy sin integrar[m[41m  [m
[32m+[m[32m- `handlers/whatsapp_webhook.py` - Webhook legacy[m
[32m+[m[32m- `config/twilio_settings.py` - Configuración legacy (usar `app/config/settings.py`)[m
[32m+[m
[32m+[m[32m#### Archivos de Desarrollo[m
[32m+[m[32m- `test_*.py` en raíz - Scripts de testing, no productivos[m
[32m+[m[32m- `run_*.py` - Scripts de desarrollo local[m
[32m+[m[32m- `fix_*.py` - Scripts de reparación temporal[m
[32m+[m
[32m+[m[32m### Lógica Temporal/Hardcoded[m
[32m+[m
[32m+[m[32m#### En `app/presentation/api/webhook.py`[m
[32m+[m[32m- Inicialización con fallbacks para falta de OpenAI/PostgreSQL[m
[32m+[m[32m- Modo FALLBACK si OpenAI falla (líneas 237-279)[m
[32m+[m[32m- Debug prints extensos (remover en producción)[m
[32m+[m
[32m+[m[32m#### En `memory/lead_memory.py`[m[41m  [m
[32m+[m[32m- Buyer personas hardcoded (líneas 142-180)[m
[32m+[m[32m- Scoring manual de leads (línea 190-215)[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 🚦 Estado Actual del Sistema[m
[32m+[m
[32m+[m[32m### ✅ Funcionalidades Operativas[m
[32m+[m[32m- Webhook FastAPI recibiendo mensajes Twilio ✅[m
[32m+[m[32m- Sistema de memoria persistente completo ✅[m[41m  [m
[32m+[m[32m- Flujo de privacidad funcional ✅[m
[32m+[m[32m- Consultas PostgreSQL a catálogo de cursos ✅[m
[32m+[m[32m- Templates de respuesta estructurados ✅[m
[32m+[m[32m- Sistema de herramientas (framework base) ✅[m
[32m+[m
[32m+[m[32m### 🚧 En Desarrollo[m[41m  [m
[32m+[m[32m- Personalización avanzada de respuestas 🚧[m
[32m+[m[32m- Sistema de bonos dinámico 🚧[m
[32m+[m[32m- Análisis de buyer persona automático 🚧[m
[32m+[m[32m- Métricas y analytics 🚧[m
[32m+[m
[32m+[m[32m### ⏳ Pendiente[m
[32m+[m[32m- Tests automatizados ⏳[m
[32m+[m[32m- Documentación de API ⏳[m[41m  [m
[32m+[m[32m- Monitoreo y logging estructurado ⏳[m
[32m+[m[32m- Optimización de performance ⏳[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 📋 Guías de Desarrollo[m
[32m+[m
[32m+[m[32m### Para Agregar Nuevo Flujo[m
[32m+[m[32m1. Crear caso de uso en `app/application/usecases/`[m
[32m+[m[32m2. Integrar en `ProcessIncomingMessageUseCase`[m
[32m+[m[32m3. Agregar templates en `app/templates/`[m
[32m+[m[32m4. Actualizar memoria en `LeadMemory`[m
[32m+[m
[32m+[m[32m### Para Nueva Herramienta[m
[32m+[m[32m1. Heredar de `BaseTool` en `tool_system.py`[m
[32m+[m[32m2. Implementar método `execute()`[m
[32m+[m[32m3. Registrar en `ToolActivationSystem`[m
[32m+[m[32m4. Mapear intención en `intent_tool_mapping`[m
[32m+[m
[32m+[m[32m### Para Nueva Entidad[m
[32m+[m[32m1. Crear en `app/domain/entities/`[m
[32m+[m[32m2. Agregar repositorio en `app/infrastructure/database/repositories/`[m
[32m+[m[32m3. Actualizar esquema en `db_schema_condensed.md`[m
[32m+[m
[32m+[m[32m### Debugging[m
[32m+[m[32m- Usar `debug_print()` en archivos principales[m
[32m+[m[32m- Logs estructurados con módulo `logging`[m
[32m+[m[32m- Webhook debugger: `run_webhook_server_debug.py`[m
[32m+[m[32m- Simulador: scripts `test_*.py`[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m**Nota**: Esta documentación refleja el estado de Enero 2025. Para cambios recientes consultar git log y PRs activos.[m
\ No newline at end of file[m
