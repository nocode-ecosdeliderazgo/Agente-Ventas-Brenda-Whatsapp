"""
Plantillas para referir usuarios a asesores humanos.
Optimizadas para WhatsApp con informaci√≥n de contacto del asesor.
"""

from app.config.settings import settings


class AdvisorReferralTemplates:
    """Plantillas para referir usuarios a asesores comerciales."""
    
    @staticmethod
    def advisor_referral_message(user_name: str = "") -> str:
        """
        Mensaje de confirmaci√≥n al usuario de que un asesor lo contactar√°.
        
        Args:
            user_name: Nombre del usuario (opcional)
            
        Returns:
            Mensaje formateado para WhatsApp
        """
        greeting = f"¬°Perfecto, {user_name}!" if user_name else "¬°Perfecto!"
        
        return f"""{greeting} 

He recibido tu solicitud para hablar con un asesor especializado en IA. 

üìû **Un {settings.advisor_title} se contactar√° contigo muy pronto** para ayudarte de manera personalizada con todas tus dudas sobre nuestros cursos.

‚è∞ **Tiempo estimado de contacto**: Dentro de las pr√≥ximas 2 horas en horario laboral (9 AM - 6 PM, M√©xico).

Mientras tanto, puedes seguir pregunt√°ndome cualquier duda que tengas sobre IA y nuestros cursos.

¬°Gracias por tu inter√©s! üöÄ"""

    @staticmethod
    def advisor_referral_with_context(user_name: str, user_role: str, specific_interest: str = "") -> str:
        """
        Mensaje de confirmaci√≥n personalizado al usuario de que un asesor lo contactar√°.
        
        Args:
            user_name: Nombre del usuario
            user_role: Rol/cargo del usuario
            specific_interest: Inter√©s espec√≠fico mencionado por el usuario
            
        Returns:
            Mensaje personalizado para WhatsApp
        """
        context_info = f"sobre {specific_interest}" if specific_interest else "sobre IA"
        
        return f"""¬°Excelente, {user_name}! 

Como {user_role}, entiendo que tienes necesidades muy espec√≠ficas de IA. He enviado tu solicitud a nuestro {settings.advisor_title} especializado en trabajar con profesionales en tu √°rea.

üìû **Un asesor se contactar√° contigo muy pronto** para ayudarte de manera personalizada {context_info}.

‚è∞ **Tiempo estimado de contacto**: Dentro de las pr√≥ximas 2 horas en horario laboral (9 AM - 6 PM, M√©xico).

El {settings.advisor_title} podr√° ofrecerte:
‚úÖ An√°lisis personalizado de tu caso como {user_role}
‚úÖ Recomendaciones espec√≠ficas para tu industria  
‚úÖ Propuesta de implementaci√≥n de IA en tu √°rea
‚úÖ Precios corporativos y facilidades de pago

Mientras esperamos su contacto, ¬øhay algo m√°s en lo que pueda ayudarte? üéØ"""

    @staticmethod
    def advisor_not_available_fallback() -> str:
        """
        Mensaje de respaldo cuando el asesor no est√° disponible.
        
        Returns:
            Mensaje con informaci√≥n alternativa
        """
        return f"""Te conectar√© con nuestro {settings.advisor_title} especializado.

üë®‚Äçüíº **{settings.advisor_name}**
üì± **{settings.advisor_phone_number}**

*Horarios de atenci√≥n:*
üìÖ Lunes a Viernes: 9:00 AM - 6:00 PM (M√©xico)
üìÖ S√°bados: 10:00 AM - 2:00 PM (M√©xico)

*Para contactarlo:*
1Ô∏è‚É£ Haz clic en: {settings.advisor_phone_number}
2Ô∏è‚É£ Menci√≥nale que vienes de parte de Brenda
3Ô∏è‚É£ Si no responde inmediatamente, d√©jale un mensaje y √©l te contactar√° pronto

¬°Estoy segura de que podr√° ayudarte con todo lo que necesitas! üòä"""

    @staticmethod
    def advisor_follow_up_message() -> str:
        """
        Mensaje de seguimiento despu√©s de referir al asesor.
        
        Returns:
            Mensaje de seguimiento
        """
        return f"""¬øYa pudiste contactar a nuestro {settings.advisor_title}? 

Si tienes alg√∫n problema para comunicarte con √©l, puedes:
üì± Intentar nuevamente: {settings.advisor_phone_number}
üí¨ Dejarle un mensaje mencionando que vienes de parte de Brenda

Mientras tanto, ¬øhay algo m√°s en lo que pueda ayudarte sobre nuestros cursos de IA?"""

    @staticmethod
    def urgent_contact_message() -> str:
        """
        Mensaje para casos urgentes o de alta prioridad.
        
        Returns:
            Mensaje con informaci√≥n de contacto prioritario
        """
        return f"""¬°Entiendo que es urgente! üö®

He marcado tu solicitud como PRIORIDAD y he notificado inmediatamente a nuestro {settings.advisor_title}.

üìû **Se contactar√° contigo INMEDIATAMENTE** para atender tu caso urgente.

‚ö° **Tiempo estimado de contacto**: Dentro de los pr√≥ximos 30 minutos.

Si no recibes el contacto en ese tiempo, por favor escr√≠beme nuevamente mencionando "URGENTE" y escalar√© tu caso.

¬°Te atender√° con la prioridad que mereces! ‚ö°"""

    @staticmethod
    def advisor_notification_message(user_phone: str, user_name: str, user_role: str, specific_interest: str = "", urgency_level: str = "normal") -> str:
        """
        Mensaje que se env√≠a al asesor para notificarle sobre un nuevo lead.
        
        Args:
            user_phone: N√∫mero de tel√©fono del usuario
            user_name: Nombre del usuario
            user_role: Rol/cargo del usuario
            specific_interest: Inter√©s espec√≠fico mencionado
            urgency_level: Nivel de urgencia (normal, high, urgent)
            
        Returns:
            Mensaje formateado para enviar al asesor
        """
        urgency_emoji = {
            'normal': 'üìû',
            'high': 'üî•', 
            'urgent': 'üö®'
        }
        
        urgency_text = {
            'normal': 'NUEVO LEAD',
            'high': 'LEAD PRIORITARIO',
            'urgent': 'LEAD URGENTE - CONTACTAR INMEDIATAMENTE'
        }
        
        emoji = urgency_emoji.get(urgency_level, 'üìû')
        priority = urgency_text.get(urgency_level, 'NUEVO LEAD')
        
        interest_line = f"‚Ä¢ **Inter√©s espec√≠fico**: {specific_interest}" if specific_interest else "‚Ä¢ **Consulta**: General sobre IA"
        
        return f"""{emoji} **{priority}** {emoji}

Un usuario ha solicitado contacto con un asesor a trav√©s de Brenda (el bot).

**DATOS DEL LEAD:**
‚Ä¢ **Nombre**: {user_name}
‚Ä¢ **Cargo/Rol**: {user_role}
‚Ä¢ **Tel√©fono**: {user_phone}
{interest_line}
‚Ä¢ **Urgencia**: {urgency_level.upper()}

**ACCI√ìN REQUERIDA:**
Contactar al usuario lo antes posible v√≠a WhatsApp al n√∫mero proporcionado.

**MENSAJE SUGERIDO:**
"Hola {user_name}, soy el Asesor Comercial de Aprenda y Aplique IA. Brenda me notific√≥ que necesitas asesor√≠a sobre nuestros cursos de IA. ¬øC√≥mo puedo ayudarte?"

‚è∞ **Generado por**: Brenda Bot
üìÖ **Fecha**: {AdvisorReferralTemplates._get_current_timestamp()}"""

    @staticmethod
    def _get_current_timestamp() -> str:
        """Obtiene timestamp actual formateado."""
        from datetime import datetime
        import pytz
        
        # Timezone de M√©xico
        mexico_tz = pytz.timezone('America/Mexico_City')
        now = datetime.now(mexico_tz)
        return now.strftime("%d/%m/%Y %H:%M:%S M√©xico")
    
    @staticmethod
    def post_purchase_advisor_notification(user_phone: str, user_name: str, post_purchase_action: str, payment_details: str = "") -> str:
        """
        Mensaje espec√≠fico que se env√≠a al asesor para casos post-purchase.
        
        Args:
            user_phone: N√∫mero de tel√©fono del usuario
            user_name: Nombre del usuario
            post_purchase_action: Acci√≥n espec√≠fica (PAYMENT_CONFIRMATION, PAYMENT_COMPLETED, COMPROBANTE_UPLOAD)
            payment_details: Detalles adicionales del pago si est√°n disponibles
            
        Returns:
            Mensaje formateado para enviar al asesor
        """
        action_descriptions = {
            'PAYMENT_CONFIRMATION': 'Confirm√≥ que proceder√° con el pago',
            'PAYMENT_COMPLETED': 'Indic√≥ que ya realiz√≥ el pago',
            'COMPROBANTE_UPLOAD': 'Mencion√≥ que enviar√°/envi√≥ comprobante'
        }
        
        urgency_levels = {
            'PAYMENT_CONFIRMATION': 'ALTA - Seguimiento de pago',
            'PAYMENT_COMPLETED': 'URGENTE - Verificar pago y activar acceso',
            'COMPROBANTE_UPLOAD': 'CR√çTICA - Procesar comprobante inmediatamente'
        }
        
        action_desc = action_descriptions.get(post_purchase_action, f'Acci√≥n post-compra: {post_purchase_action}')
        urgency = urgency_levels.get(post_purchase_action, 'ALTA')
        
        payment_info = f"\n‚Ä¢ **Detalles del pago**: {payment_details}" if payment_details else ""
        
        return f"""üè¶ **LEAD POST-COMPRA - {urgency}** üè¶

Un usuario que ya recibi√≥ datos bancarios ha ejecutado una acci√≥n de seguimiento:

**DATOS DEL LEAD:**
‚Ä¢ **Nombre**: {user_name}
‚Ä¢ **Tel√©fono**: {user_phone}
‚Ä¢ **Acci√≥n ejecutada**: {action_desc}
‚Ä¢ **Urgencia**: {urgency}{payment_info}

**ACCI√ìN REQUERIDA INMEDIATA:**
1Ô∏è‚É£ Contactar al usuario dentro de las pr√≥ximas 2 horas
2Ô∏è‚É£ Verificar estado del pago en el sistema bancario
3Ô∏è‚É£ Activar acceso al curso si el pago est√° confirmado
4Ô∏è‚É£ Entregar bonos workbook exclusivos
5Ô∏è‚É£ Coordinar primeros pasos del curso

**MENSAJE SUGERIDO:**
"Hola {user_name}, soy el Asesor Comercial de Aprenda y Aplique IA. He recibido tu confirmaci√≥n de pago. Ya estoy verificando la transferencia y en los pr√≥ximos minutos activar√© tu acceso completo al curso y te entregar√© tus bonos exclusivos. ¬°Bienvenido al mundo de la IA pr√°ctica!"

‚è∞ **Generado por**: Brenda Bot (Post-Purchase Flow)
üìÖ **Fecha**: {AdvisorReferralTemplates._get_current_timestamp()}
üö® **PRIORIDAD**: Este lead est√° en la fase cr√≠tica post-compra - contacto inmediato requerido"""
    
    @staticmethod  
    def payment_verification_needed_message(user_name: str = "", payment_method: str = "transferencia") -> str:
        """
        Mensaje para casos donde se necesita verificaci√≥n manual del pago.
        
        Args:
            user_name: Nombre del usuario (opcional)
            payment_method: M√©todo de pago utilizado
            
        Returns:
            Mensaje formateado para WhatsApp
        """
        greeting = f"¬°Gracias, {user_name}!" if user_name else "¬°Gracias!"
        
        return f"""{greeting} 

He recibido tu confirmaci√≥n de {payment_method}. Nuestro equipo est√° verificando tu pago en este momento.

üîÑ **PROCESO AUTOM√ÅTICO EN CURSO:**
1Ô∏è‚É£ Verificaci√≥n bancaria (pr√≥ximos 30 min)
2Ô∏è‚É£ Activaci√≥n de acceso completo
3Ô∏è‚É£ Preparaci√≥n de bonos workbook
4Ô∏è‚É£ Contacto personalizado del asesor

üìû **Nuestro asesor comercial te contactar√° dentro de las pr√≥ximas 2 horas** para:
‚úÖ Confirmar activaci√≥n exitosa
üéÅ Entregar tus bonos workbook exclusivos  
üìö Orientarte en tus primeros pasos
üöÄ Coordinar tu plan de implementaci√≥n de IA

‚è∞ **Horario de contacto**: 9:00 AM - 6:00 PM (M√©xico)

¬°Tu transformaci√≥n con IA est√° por comenzar! üéØ"""
    
    @staticmethod
    def course_activation_confirmation_message(user_name: str = "", course_name: str = "Experto en IA") -> str:
        """
        Mensaje de confirmaci√≥n cuando el asesor ha activado el acceso al curso.
        
        Args:
            user_name: Nombre del usuario (opcional)
            course_name: Nombre del curso activado
            
        Returns:
            Mensaje de confirmaci√≥n de activaci√≥n
        """
        greeting = f"¬°Excelente noticia, {user_name}!" if user_name else "¬°Excelente noticia!"
        
        return f"""{greeting} 

üéâ **¬°TU ACCESO HA SIDO ACTIVADO EXITOSAMENTE!**

**‚úÖ YA TIENES DISPONIBLE:**
‚Ä¢ Acceso completo a "{course_name}"
‚Ä¢ Todos los bonos workbook exclusivos
‚Ä¢ Comunidad privada vitalicia
‚Ä¢ Soporte especializado en Telegram
‚Ä¢ Recursos descargables y plantillas

üì± **PR√ìXIMOS PASOS:**
1Ô∏è‚É£ Revisa el email de bienvenida con tus credenciales
2Ô∏è‚É£ √önete a la comunidad privada (enlace en el email)
3Ô∏è‚É£ Descarga tus bonos workbook desde tu √°rea privada
4Ô∏è‚É£ Programa tu primera sesi√≥n de estudio

üöÄ **¬°PUEDES EMPEZAR AHORA MISMO!**
Tu inversi√≥n en IA pr√°ctica ya est√° lista para generar resultados.

¬øTe gustar√≠a que te ayude con alg√∫n paso espec√≠fico para comenzar?"""